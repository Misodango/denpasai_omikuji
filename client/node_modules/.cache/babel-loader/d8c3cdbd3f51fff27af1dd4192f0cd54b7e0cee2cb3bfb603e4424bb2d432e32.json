{"ast":null,"code":"var _jsxFileName = \"/home/misodango/kosen/2023/2024/radioFest/project-root/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport QRCode from 'qrcode.react';\nimport './App.css';\nimport ErrorBoundary from './ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [omikujiData, setOmikujiData] = useState(null);\n  const [qrCodeData, setQrCodeData] = useState('');\n  const omikujiRef = useRef(null);\n  useEffect(() => {\n    let isMounted = true;\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-last-data');\n        if (isMounted) {\n          setOmikujiData(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => {\n      isMounted = false;\n      clearInterval(interval);\n    };\n  }, []);\n  const captureAndGenerateQR = async () => {\n    if (omikujiRef.current) {\n      try {\n        const canvas = await html2canvas(omikujiRef.current);\n        const imageData = canvas.toDataURL('image/png');\n        setQrCodeData(imageData);\n      } catch (error) {\n        console.error('Error generating QR code:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    let isMounted = true;\n    if (omikujiData && isMounted) {\n      captureAndGenerateQR();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [omikujiData]);\n  useEffect(() => {\n    return () => {\n      // コンポーネントのアンマウント時にクリーンアップを行う\n      setOmikujiData(null);\n      setQrCodeData('');\n    };\n  }, []);\n  if (!omikujiData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  const firstColumnItems = ['運勢', '助言', '願事', '恋愛', '待人'];\n  const secondColumnItems = ['商売', '旅立', '学問', '病気', '開運物', '開運色'];\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"omikuji-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"omikuji-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"omikuji-title\",\n          children: \"\\u304A\\u307F\\u304F\\u3058\\u5802\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: omikujiRef,\n          className: \"omikuji-paper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"omikuji-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"omikuji-column\",\n              children: firstColumnItems.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `category ${key === '運勢' ? 'omikuji-result' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: [key, \"\\uFF1A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-fortune\",\n                  children: omikujiData[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"omikuji-column\",\n              children: secondColumnItems.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: [key, \"\\uFF1A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-fortune\",\n                  children: omikujiData[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), qrCodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-code-container\",\n          children: /*#__PURE__*/_jsxDEV(QRCode, {\n            value: qrCodeData,\n            size: 128\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sar5+3FQDNHdxF2yMFxy6juW4lY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","html2canvas","QRCode","ErrorBoundary","jsxDEV","_jsxDEV","App","_s","omikujiData","setOmikujiData","qrCodeData","setQrCodeData","omikujiRef","isMounted","fetchData","response","get","data","error","console","interval","setInterval","clearInterval","captureAndGenerateQR","current","canvas","imageData","toDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","firstColumnItems","secondColumnItems","className","ref","map","key","value","size","_c","$RefreshReg$"],"sources":["/home/misodango/kosen/2023/2024/radioFest/project-root/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport QRCode from 'qrcode.react';\nimport './App.css';\nimport ErrorBoundary from './ErrorBoundary';\n\n\nfunction App() {\n  const [omikujiData, setOmikujiData] = useState(null);\n  const [qrCodeData, setQrCodeData] = useState('');\n  const omikujiRef = useRef(null);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-last-data');\n        if (isMounted) {\n          setOmikujiData(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n\n    return () => {\n      isMounted = false;\n      clearInterval(interval);\n    };\n  }, []);\n\n  const captureAndGenerateQR = async () => {\n    if (omikujiRef.current) {\n      try {\n        const canvas = await html2canvas(omikujiRef.current);\n        const imageData = canvas.toDataURL('image/png');\n        setQrCodeData(imageData);\n      } catch (error) {\n        console.error('Error generating QR code:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (omikujiData && isMounted) {\n      captureAndGenerateQR();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [omikujiData]);\n\n  useEffect(() => {\n    return () => {\n      // コンポーネントのアンマウント時にクリーンアップを行う\n      setOmikujiData(null);\n      setQrCodeData('');\n    };\n  }, []);\n\n  if (!omikujiData) {\n    return <div>Loading...</div>;\n  }\n\n  const firstColumnItems = ['運勢', '助言', '願事', '恋愛', '待人'];\n  const secondColumnItems = ['商売', '旅立', '学問', '病気', '開運物', '開運色'];\n\n  return (\n    <ErrorBoundary>\n      <div className=\"omikuji-container\">\n        <div className=\"omikuji-container\">\n          <h1 className=\"omikuji-title\">おみくじ堂</h1>\n          <div ref={omikujiRef} className=\"omikuji-paper\">\n            <div className=\"omikuji-content\">\n              <div className=\"omikuji-column\">\n                {firstColumnItems.map(key => (\n                  <div key={key} className={`category ${key === '運勢' ? 'omikuji-result' : ''}`}>\n                    <span className=\"category-name\">{key}：</span>\n                    <span className=\"category-fortune\">{omikujiData[key]}</span>\n                  </div>\n                ))}\n              </div>\n              <div className=\"omikuji-column\">\n                {secondColumnItems.map(key => (\n                  <div key={key} className=\"category\">\n                    <span className=\"category-name\">{key}：</span>\n                    <span className=\"category-fortune\">{omikujiData[key]}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          {qrCodeData && (\n            <div className=\"qr-code-container\">\n              <QRCode value={qrCodeData} size={128} />\n            </div>\n          )}\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}